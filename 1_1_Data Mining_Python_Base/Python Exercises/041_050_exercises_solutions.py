# -*- coding: utf-8 -*-
"""041-050_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PqBxXoB1JyI_DaNfVF7xo-MXpvO3L06k

## Numpy

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 41](#1)
* [Exercise 42](#2)
* [Exercise 43](#3)
* [Exercise 44](#4)
* [Exercise 45](#5)
* [Exercise 46](#6)
* [Exercise 47](#7)
* [Exercise 48](#8)
* [Exercise 49](#9)
* [Exercise 50](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np

np.__version__

"""### <a name='1'></a> Exercise 41
The following array $ A $ with the shape (2, 3) is given.
Даден е следният масив $ A $ с формата (2, 3).
```
A = np.array([[4, 2, 1],
              [6, 4, 2]])
```
"""

A = np.array([[4, 2, 1],
              [6, 4, 2]])

print(A.shape)

"""* Expand the array $ A $ by one dimension (add a new dimension at the beginning). Expected shape of the output array: _(1, 2, 3)_.
Разширете масива $ A $ с едно измерение (добавете ново измерение в началото). Очаквана форма на изходния масив: _(1, 2, 3)_.

__Tip:__ Use the _np.expand_dims()_ function.
"""

np.expand_dims(A, axis=0)

"""* Expand the array $ A $ by one dimension (add a new dimension at the end). Expected shape of the output array: _(2, 3, 1)_.
Разширете масива $ A $ с едно измерение (добавете ново измерение в края). Очаквана форма на изходния масив: _(2, 3, 1)_.

__Tip:__ Use the _np.expand_dims()_ function.
"""

np.expand_dims(A, axis=2)

"""### <a name='2'></a> Exercise 42
Generate a three-dimensional array named _image_ with shape _(200, 300, 3)_ filled with random values from 0 to 255 inclusive and data type _np.uint8_.
Генерирайте триизмерен масив с име _image_ с форма _(200, 300, 3)_, запълнена с произволни стойности от 0 до 255 включително и тип данни _np.uint8_.
"""

image = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
image

"""Then run the following block of code. As a result, you'll get a preview of a randomly generated color image."""
"""След това изпълнете следния блок код. В резултат на това ще получите визуализация на произволно генерирано цветно изображение."""

from google.colab.patches import cv2_imshow

cv2_imshow(image)

"""__Note:__ The color image can be saved as a three-dimensional numpy array with the shape: (height, width, channel).
"""__Забележка:__ Цветното изображение може да бъде запазено като триизмерен numpy масив с формата: (височина, ширина, канал).

### <a name='3'></a> Exercise 43
The _image_ array from the previous task is of the shape _(200, 300, 3)_. Follow the instructions:
* Extend the _image_ array by one dimension (add a new dimension at the beginning). Expected shape of the output array: _(1, 200, 300, 3)_.
Масивът _image_ от предишната задача е с формата _(200, 300, 3)_. Следвайте инструкциите:
* Разширете масива _image_ с едно измерение (добавете ново измерение в началото). Очаквана форма на изходния масив: _(1, 200, 300, 3)_.

__Tip:__ Use the _np.expand_dims()_ function.
"""

image = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
print(image.shape)

image = np.expand_dims(image, axis=0)
print(image.shape)

"""* Extend the _image_ array by one dimension (add a new dimension at the end). Expected shape of the output array: _(200, 300, 3, 1)_.
Разширете масива _image_ с едно измерение (добавете ново измерение в края). Очаквана форма на изходния масив:
__Tip:__ Use the _np.expand_dims()_ function.
"""

# Solution 1
image = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
print(image.shape)

image = np.expand_dims(image, axis=3)
print(image.shape)

# Solution 2
image = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
print(image.shape)

image = np.expand_dims(image, axis=-1)
print(image.shape)

"""### <a name='4'></a> Exercise 44
Two randomly generated arrays _image1_ and _image2_ are given.
Дадени са два произволно генерирани масива _image1_ и _image2_.
```
image1 = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
image2 = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
```

Expand each of these arrays by adding one dimension at the beginning and then combine the arrays into one called _images_. Expected shape of array: _(2, 200, 300, 3)_.
Разширете всеки от тези масиви, като добавите едно измерение в началото и след това комбинирайте масивите в един, наречен _images_. Очаквана форма на масива: _(2, 200, 300, 3)_.

"""

image1 = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)
image2 = np.random.randint(low=0, high=256, size=(200, 300, 3), dtype=np.uint8)

image1 = np.expand_dims(image1, axis=0)
image2 = np.expand_dims(image2, axis=0)

images = np.append(image1, image2, axis=0)
images.shape

"""### <a name='5'></a> Exercise 45
From the _images_ array from the previous exercise, extract the first ten rows and the first ten columns from the third channel (index 2) for the first picture.
От масива _images_ от предишното упражнение извлечете първите десет реда и първите десет колони от третия канал (индекс 2) за първата картина.
"""

images[0, :10, :10, 2]

"""### <a name='6'></a> Exercise 46
From the _images_ array extract the first hundred rows and the first hundred columns for the second image from the first channel (index 0) and display using the function _cv2_imshow_.
От масива _images_ извлечете първите сто реда и първите сто колони за второто изображение от първия канал (индекс 0) и покажете с помощта на функцията _cv2_imshow_.
"""

cv2_imshow(images[1, :100, :100, 0])

"""### <a name='7'></a> Exercise 47
Below is a preview of the first image from the array _images_ from Exercise 44.
По-долу е преглед на първото изображение от масива _images_ от Упражнение 44.

"""

cv2_imshow(images[0])

"""For the first image from the array _images_, assign for pixels with the index $ [50: 150, 100: 200] $ the value 0 and then display the image."""
"""За първото изображение от масива _images_, задайте за пиксели с индекс $ [50: 150, 100: 200] $ стойността 0 и след това покажете изображението."""

images[0][50:150, 100:200] = 0
cv2_imshow(images[0])

"""For the second image from the array _images_, assign for the pixel with the index $ [100: 150, 10:150] $ the value 255 and then display the image."""
"""За второто изображение от масива _images_, задайте за пиксела с индекс $ [100: 150, 10:150] $ стойността 255 и след това покажете изображението."""

images[1][100:150, 10:150] = 255
cv2_imshow(images[1])

"""### <a name='8'></a> Exercise 48
The following array $ A $ with the shape _(1, 2, 3)_ is given.
Даден е следният масив $ A $ с формата _(1, 2, 3)_.

```
A = np.array([[[1, 2, 3],
               [6, 3, 2]]])
```

Remove the unnecessary first dimension and get an array of _(2, 3)_.
Премахнете ненужното първо измерение и вземете масив от _(2, 3)_.

__Tip:__ Use the _np.squeeze()_ function.

"""

A = np.array([[[1, 2, 3],
               [6, 3, 2]]])

np.squeeze(A)

"""### <a name='9'></a> Exercise 49
The following array $ A $ with the shape _(4, 1)_ is given.
Даден е следният масив $ A $ с формата _(4, 1)_.
```
A = np.array([[0.4],
              [0.9],
              [0.5],
              [0.6]])
```
Remove the unnecessary dimension and get an array with the shape _(4,)_.
Премахнете ненужното измерение и получете масив с формата _(4,)_.

__Tip:__ Use the _np.squeeze()_ function.
"""

A = np.array([[0.4],
              [0.9],
              [0.5],
              [0.6]])

np.squeeze(A)

"""### <a name='10'></a> Exercise 50
The first image was extract from the _images_ array as follows:
Първото изображение беше извлечено от масива _images_, както следва:
"""

image1 = images[:1]
image1.shape

"""Using the knowledge from previous exercises, remove the unnecessary first dimension of the _image1_ array."""
"""Използвайки знанията от предишни упражнения, премахнете ненужното първо измерение на масива _image1_."""

image1 = np.squeeze(image1)
image1.shape

