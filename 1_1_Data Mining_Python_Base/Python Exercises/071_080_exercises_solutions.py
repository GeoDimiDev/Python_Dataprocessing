# -*- coding: utf-8 -*-
"""071-080_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_LIcxrDcCcA_r7pvBEX09WQ2l72q-5ij

## Numpy

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 71](#1)
* [Exercise 72](#2)
* [Exercise 73](#3)
* [Exercise 74](#4)
* [Exercise 75](#5)
* [Exercise 76](#6)
* [Exercise 77](#7)
* [Exercise 78](#8)
* [Exercise 79](#9)
* [Exercise 80](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np

np.random.seed(42)
np.__version__

"""### <a name='1'></a> Exercise 71
The following $ A $ array is given:
Даден е следният $ A $ масив:
```
A = np.array([['id', 'price'],
              ['001', 14.99],
              ['002', 4.99],
              ['003', 7.99],
              ['004', 2.49],
              ['005', 1.49]])
```
From the second row of the $ A $ array, randomly shuffle the rows in the array.
От втория ред на масива $ A $, произволно разбъркайте редовете в масива.

__Tip:__ Use the _np.random.shuffle()_ function.

"""

A = np.array([['id', 'price'],
              ['001', 14.99],
              ['002', 4.99],
              ['003', 7.99],
              ['004', 2.49],
              ['005', 1.49]])

np.random.shuffle(A[1:])
A

"""### <a name='2'></a> Exercise 72
The following array $ A $ is given:
Даден е следният масив $ A $:
```
A = np.array([0.2, 0.15, 0.1, 0.3, 0.2, 0.05])
```
Return an array of indexes that will sort the array $ A $ in ascending order.
Връща масив от индекси, които ще сортират масива $ A $ във възходящ ред.

__Expected result:__

```
array([5, 2, 1, 0, 4, 3])
```
__Tip:__ Use the _np.argsort()_ function.

"""

A = np.array([0.2, 0.15, 0.1, 0.3, 0.2, 0.05])

np.argsort(A)

"""### <a name='3'></a> Exercise 73

The following array $ A $ is given:
Даден е следният масив $ A $:
```
A = np.random.randn(10, 8)
```
Round the values of this array to three decimal places.
Закръглете стойностите на този масив до три знака след десетичната запетая.

__Tip:__ Use the function _np.round()_.

"""

A = np.random.randn(10, 8)

np.round(A, decimals=3)

"""### <a name='4'></a> Exercise 74
Determine the roots of the polynomial:
Определете корените на полинома:
* $W(x) = 4x^2 + 5x + 1$

Check the solution.

__Tip:__ Use the _np.roots()_ and _np.polyval()_ functions.
"""

W = np.array([4, 5, 1])
np.roots(W)

print(np.polyval(W, -1))
print(np.polyval(W, -0.25))

"""### <a name='5'></a> Exercise 75
Determine the roots of polynomials:
Определете корените на полиномите:
* $Q(x) = 2x^3 + 4x^2 -5x + 1$
* $R(x) = 2x^3 -5x + 1$

__Tip:__ Use the _np.roots()_ function.

"""

Q = np.array([2, 4, -5, 1])
np.roots(Q)

R = np.array([2, 0, -5, 1])
np.roots(R)

"""### <a name='6'></a> Exercise 76
Polynomials are given:
Дадени са полиноми:
* $W(x) = 4x^2 + 5x + 1$
* $Q(x) = 2x^3 + 4x^2 -5x + 1$

"""

W = np.array([4, 5, 1])
Q = np.array([2, 4, -5, 1])

"""Perform:
* $ W (x) + Q (x) $
"""

np.polyadd(W, Q)

"""* $W(x) - Q(x)$

"""

np.polysub(W, Q)

"""* $W(x) * Q(x)$

"""

np.polymul(W, Q)

"""* $W(x) + 2Q(x)$"""

np.polyadd(W, 2 * Q)

"""### <a name='7'></a> Exercise 77
The array below is given:
Даден е масивът по-долу:

```
A = np.array([[-4, 3, 0, 1, -5],
              [6, -4, -2, 1, 3]])
```
Use the sign function for the array $ A $. As a reminder, the function works as follows: returns -1 for negative values, zero for zero, and 1 for positive values.
Използвайте знаковата функция за масива $ A $. Като напомняне, функцията работи по следния начин: връща -1 за отрицателни стойности, нула за нула и 1 за положителни стойности.

__Expected result:__

```
array([[-1,  1,  0,  1, -1],
       [ 1, -1, -1,  1,  1]])
```
__Tip:__ Use the _np.sign()_ function.
"""

A = np.array([[-4, 3, 0, 1, -5],
              [6, -4, -2, 1, 3]])

np.sign(A)

"""### <a name='8'></a> Exercise 78
Using the _np.arange()_ function, generate the following array:
С помощта на функцията _np.arange()_ генерирайте следния масив:

```
array(['2021-01-01', '2021-01-02', '2021-01-03', '2021-01-04',
       '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08',
       '2021-01-09', '2021-01-10', '2021-01-11', '2021-01-12',
       '2021-01-13', '2021-01-14', '2021-01-15', '2021-01-16',
       '2021-01-17', '2021-01-18', '2021-01-19', '2021-01-20',
       '2021-01-21', '2021-01-22', '2021-01-23', '2021-01-24',
       '2021-01-25', '2021-01-26', '2021-01-27', '2021-01-28',
       '2021-01-29', '2021-01-30', '2021-01-31'], dtype='datetime64[D]')
```

"""

np.arange('2021-01-01', '2021-02-01', dtype='datetime64[D]')

"""### <a name='9'></a> Exercise 79

Using the _np.arange()_ function, generate the following array:
С помощта на функцията _np.arange()_ генерирайте следния масив:

```
array([['2021-01', '2021-02', '2021-03'],
       ['2021-04', '2021-05', '2021-06'],
       ['2021-07', '2021-08', '2021-09'],
       ['2021-10', '2021-11', '2021-12']], dtype='datetime64[M]')
```

"""

A = np.arange('2021-01', '2022-01', dtype='datetime64[M]')
A = A.reshape(-1, 3)
A

"""### <a name='10'></a> Exercise 80
Using the _np.datetime64()_ function, generate today's date.
С помощта на функцията _np.datetime64()_ генерирайте днешната дата.
"""

np.datetime64('today')

