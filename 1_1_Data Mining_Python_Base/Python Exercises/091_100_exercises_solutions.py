# -*- coding: utf-8 -*-
"""091-100_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Crh-rcTTKJJf3wZAan7CRpz4eaUaW3Qw

## Numpy

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 91](#1)
* [Exercise 92](#2)
* [Exercise 93](#3)
* [Exercise 94](#4)
* [Exercise 95](#5)
* [Exercise 96](#6)
* [Exercise 97](#7)
* [Exercise 98](#8)
* [Exercise 99](#9)
* [Exercise 100](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np

np.set_printoptions(linewidth=160, suppress=True)
np.__version__

"""### <a name='1'></a> Exercise 91
The following string _wig_games_raw_ is provided containing data on the WIG.GAMES sector index:
Предоставен е следният низ _wig_games_raw_, съдържащ данни за секторния индекс на WIG.GAMES:

```
wig_games_raw = '''Profile	Time	Course	Change	Change%	Ref.	Open	Low	High	Volume	Turn	Share
11B (11BIT)	17 kwi 17:01	391.00	+8.00	(+2.09%)	383.00	383.50	383.00	394.00	12 784	4 994 874	19.034%
CDR (CDPROJEKT)	17 kwi 17:01	339.50	+5.30	(+1.59%)	334.20	338.30	337.00	344.20	233 059	79 245 368	39.618%
CIG (CIGAMES)	17 kwi 17:03	0.742	-0.012	(-1.59%)	0.754	0.772	0.730	0.772	1 311 078	971 459	1.855%
PLW (PLAYWAY)	17 kwi 17:03	387.50	+18.00	(+4.87%)	369.50	374.00	373.00	388.00	33 206	12 661 786	10.638%
TEN (TSGAMES)	17 kwi 17:02	349.50	+22.50	(+6.88%)	327.00	332.00	330.00	353.50	39 793	13 697 060	28.855%'''
```
Build a numpy array from this data and name it _wig_games_.
Създайте масив numpy от тези данни и го наречете _wig_games_.

__Expected result:__
```
array([['Profile', 'Time', 'Course', 'Change', 'Change%', 'Ref.', 'Open', 'Low', 'High', 'Volume', 'Turn', 'Share'],
       ['11B(11BIT)', '17kwi17:01', '391.00', '+8.00', '(+2.09%)', '383.00', '383.50', '383.00', '394.00', '12784', '4994874', '19.034%'],
       ['CDR(CDPROJEKT)', '17kwi17:01', '339.50', '+5.30', '(+1.59%)', '334.20', '338.30', '337.00', '344.20', '233059', '79245368', '39.618%'],
       ['CIG(CIGAMES)', '17kwi17:03', '0.742', '-0.012', '(-1.59%)', '0.754', '0.772', '0.730', '0.772', '1311078', '971459', '1.855%'],
       ['PLW(PLAYWAY)', '17kwi17:03', '387.50', '+18.00', '(+4.87%)', '369.50', '374.00', '373.00', '388.00', '33206', '12661786', '10.638%'],
       ['TEN(TSGAMES)', '17kwi17:02', '349.50', '+22.50', '(+6.88%)', '327.00', '332.00', '330.00', '353.50', '39793', '13697060', '28.855%']], dtype='<U14')
```

"""

wig_games_raw = """Profile	Time	Course	Change	Change%	Ref.	Open	Low	High	Volume	Turn	Share
11B (11BIT)	17 kwi 17:01	391.00	+8.00	(+2.09%)	383.00	383.50	383.00	394.00	12 784	4 994 874	19.034%
CDR (CDPROJEKT)	17 kwi 17:01	339.50	+5.30	(+1.59%)	334.20	338.30	337.00	344.20	233 059	79 245 368	39.618%
CIG (CIGAMES)	17 kwi 17:03	0.742	-0.012	(-1.59%)	0.754	0.772	0.730	0.772	1 311 078	971 459	1.855%
PLW (PLAYWAY)	17 kwi 17:03	387.50	+18.00	(+4.87%)	369.50	374.00	373.00	388.00	33 206	12 661 786	10.638%
TEN (TSGAMES)	17 kwi 17:02	349.50	+22.50	(+6.88%)	327.00	332.00	330.00	353.50	39 793	13 697 060	28.855%"""

lines = wig_games_raw.splitlines()
lines = [line.split('\t') for line in lines]
wig_games = np.array(lines, dtype=np.str)
wig_games = np.char.replace(wig_games, ' ', '')
wig_games

"""### <a name='2'></a> Exercise 92
Remove the columns from the _wig_games_ array from the previous exercise:
Премахнете колоните от масива _wig_games_ от предишното упражнение:
* Change
* Change%
* Ref.
* Volume

__Expected result:__
```
array([['Profile', 'Time', 'Course', 'Open', 'Low', 'High', 'Turn', 'Share'],
       ['11B(11BIT)', '17kwi17:01', '391.00', '383.50', '383.00', '394.00', '4994874', '19.034%'],
       ['CDR(CDPROJEKT)', '17kwi17:01', '339.50', '338.30', '337.00', '344.20', '79245368', '39.618%'],
       ['CIG(CIGAMES)', '17kwi17:03', '0.742', '0.772', '0.730', '0.772', '971459', '1.855%'],
       ['PLW(PLAYWAY)', '17kwi17:03', '387.50', '374.00', '373.00', '388.00', '12661786', '10.638%'],
       ['TEN(TSGAMES)', '17kwi17:02', '349.50', '332.00', '330.00', '353.50', '13697060', '28.855%']], dtype='<U14')
```

"""

wig_games = np.delete(wig_games, [3, 4, 5, 9], axis=1)
wig_games

"""### <a name='3'></a> Exercise 93
Save the array _wig_games_ from the previous exercise to the _wig_games.csv_ file.
Запазете масива _wig_games_ от предишното упражнение във файла _wig_games.csv_.
"""

np.savetxt(fname='wig_games.csv', X=wig_games, fmt='%s', delimiter=',')

"""Run the cell below to check."""
"""Изпълнете клетката по-долу, за да проверите."""

!head wig_games.csv

"""### <a name='4'></a> Exercise 94
Load the contents of the _wig_games.csv_ file into the _wig_games_new_ variable.
Заредете съдържанието на файла _wig_games.csv_ в променливата _wig_games_new_.
"""

wig_games_new = np.loadtxt(fname='wig_games.csv', delimiter=',', dtype=str)
wig_games_new

"""### <a name='5'></a> Exercise 95
The following string _playway_raw_ is provided containing Playway's March 2020 listings:
Предоставен е следният низ _playway_raw_, съдържащ списъците на Playway за март 2020 г.:

```
playway_raw = '''Date,Open,High,Low,Close,Volume
2020-03-02,305,324.5,283.5,310,64081
2020-03-03,325.5,340.5,320,340.5,55496
2020-03-04,324,340.5,315,330,36152
2020-03-05,344,344,310,315,35992
2020-03-06,306.5,307,291,305,32539
2020-03-09,274,291,250,258,79402
2020-03-10,278,284.5,256,264,35700
2020-03-11,270,270,238.5,245,60445
2020-03-12,218,228,196,197,94031
2020-03-13,210,229,198.8,211,100412
2020-03-16,205,248,197.8,240.5,50659
2020-03-17,245,269,232.5,264,99480
2020-03-18,264,280,251,270,70136
2020-03-19,267,280,267,279.5,30732
2020-03-20,297.5,307,280,280.5,43426
2020-03-23,274,289,258,285,37098
2020-03-24,305,309,296.5,309,31939
2020-03-25,313,330,295,304,46724
2020-03-26,300,309,295.5,300,27213
2020-03-27,302,306.5,290,296,13466
2020-03-30,299,300,287,300,10316
2020-03-31,302.5,309,302,306.5,15698'''
```

Create an array named _playway_ and assign the following data to it.
Създайте масив с име _playway_ и му присвоете следните данни.
"""

playway_raw = """Date,Open,High,Low,Close,Volume
2020-03-02,305,324.5,283.5,310,64081
2020-03-03,325.5,340.5,320,340.5,55496
2020-03-04,324,340.5,315,330,36152
2020-03-05,344,344,310,315,35992
2020-03-06,306.5,307,291,305,32539
2020-03-09,274,291,250,258,79402
2020-03-10,278,284.5,256,264,35700
2020-03-11,270,270,238.5,245,60445
2020-03-12,218,228,196,197,94031
2020-03-13,210,229,198.8,211,100412
2020-03-16,205,248,197.8,240.5,50659
2020-03-17,245,269,232.5,264,99480
2020-03-18,264,280,251,270,70136
2020-03-19,267,280,267,279.5,30732
2020-03-20,297.5,307,280,280.5,43426
2020-03-23,274,289,258,285,37098
2020-03-24,305,309,296.5,309,31939
2020-03-25,313,330,295,304,46724
2020-03-26,300,309,295.5,300,27213
2020-03-27,302,306.5,290,296,13466
2020-03-30,299,300,287,300,10316
2020-03-31,302.5,309,302,306.5,15698"""

lines = playway_raw.splitlines()
lines = [line.split(',') for line in lines]
playway = np.array(lines, dtype=np.str)
playway

"""Delete the column named 'Date'. Assign only column values without headers to the _playway_values_ variable. Convert the array to the _float_ data type.
Изтрийте колоната с име „Дата“. Присвоете само стойности на колони без заглавки към променливата _playway_values_. Преобразувайте масива в тип данни _float_.

__Expected result:__
```
array([[   305. ,    324.5,    283.5,    310. ,  64081. ],
       [   325.5,    340.5,    320. ,    340.5,  55496. ],
       [   324. ,    340.5,    315. ,    330. ,  36152. ],
       [   344. ,    344. ,    310. ,    315. ,  35992. ],
       [   306.5,    307. ,    291. ,    305. ,  32539. ],
       [   274. ,    291. ,    250. ,    258. ,  79402. ],
       [   278. ,    284.5,    256. ,    264. ,  35700. ],
       [   270. ,    270. ,    238.5,    245. ,  60445. ],
       [   218. ,    228. ,    196. ,    197. ,  94031. ],
       [   210. ,    229. ,    198.8,    211. , 100412. ],
       [   205. ,    248. ,    197.8,    240.5,  50659. ],
       [   245. ,    269. ,    232.5,    264. ,  99480. ],
       [   264. ,    280. ,    251. ,    270. ,  70136. ],
       [   267. ,    280. ,    267. ,    279.5,  30732. ],
       [   297.5,    307. ,    280. ,    280.5,  43426. ],
       [   274. ,    289. ,    258. ,    285. ,  37098. ],
       [   305. ,    309. ,    296.5,    309. ,  31939. ],
       [   313. ,    330. ,    295. ,    304. ,  46724. ],
       [   300. ,    309. ,    295.5,    300. ,  27213. ],
       [   302. ,    306.5,    290. ,    296. ,  13466. ],
       [   299. ,    300. ,    287. ,    300. ,  10316. ],
       [   302.5,    309. ,    302. ,    306.5,  15698. ]])
```
"""

playway = np.delete(playway, [0], axis=1)
playway_values = playway[1:].astype(float)
playway_values

"""### <a name='6'></a> Exercise 96
For the _playway_values_ array from the previous exercise, calculate the average value for each column. Round the result to two decimal places.
За масива _playway_values_ от предишното упражнение, изчислете средната стойност за всяка колона. Закръглете резултата до два знака след десетичната запетая.
"""

np.round(playway_values.mean(axis=0), 2)

"""For the _playway_values_ array from the previous exercise, calculate the minimum value for each column. Round the result to two decimal places."""
"""За масива _playway_values_ от предишното упражнение, изчислете минималната стойност за всяка колона. Закръглете резултата до два знака след десетичната запетая."""

np.round(playway_values.min(axis=0), 2)

"""For the _playway_values_ array from the previous exercise, calculate the maximum value for each column. Round the result to two decimal places."""
"""За масива _playway_values_ от предишното упражнение, изчислете максималната стойност за всяка колона. Закръглете резултата до два знака след десетичната запетая."""

np.round(playway_values.max(axis=0), 2)

"""Calculate the difference between the maximum and minimum value for each column."""
"""Изчислете разликата между максималната и минималната стойност за всяка колона."""

playway_values.max(axis=0) - playway_values.min(axis=0)

"""### <a name='7'></a> Exercise 97
Using the _playway_values_ array, calculate the new column: the difference between the highest and lowest price.

Steps:
1. assign the calculated difference to the _max_min_diff_ variable
2. add the calculated column (variable _max_min_diff_) to the array _playway_values_ at the end.

Използвайки масива _playway_values_, изчислете новата колона: разликата между най-високата и най-ниската цена.

Стъпки:
1. присвоете изчислената разлика на променливата _max_min_diff_
2. добавете изчислената колона (променлива _max_min_diff_) към масива _playway_values_ в края.

__Expected result:__
```
array([[   305. ,    324.5,    283.5,    310. ,  64081. ,     41. ],
       [   325.5,    340.5,    320. ,    340.5,  55496. ,     20.5],
       [   324. ,    340.5,    315. ,    330. ,  36152. ,     25.5],
       [   344. ,    344. ,    310. ,    315. ,  35992. ,     34. ],
       [   306.5,    307. ,    291. ,    305. ,  32539. ,     16. ],
       [   274. ,    291. ,    250. ,    258. ,  79402. ,     41. ],
       [   278. ,    284.5,    256. ,    264. ,  35700. ,     28.5],
       [   270. ,    270. ,    238.5,    245. ,  60445. ,     31.5],
       [   218. ,    228. ,    196. ,    197. ,  94031. ,     32. ],
       [   210. ,    229. ,    198.8,    211. , 100412. ,     30.2],
       [   205. ,    248. ,    197.8,    240.5,  50659. ,     50.2],
       [   245. ,    269. ,    232.5,    264. ,  99480. ,     36.5],
       [   264. ,    280. ,    251. ,    270. ,  70136. ,     29. ],
       [   267. ,    280. ,    267. ,    279.5,  30732. ,     13. ],
       [   297.5,    307. ,    280. ,    280.5,  43426. ,     27. ],
       [   274. ,    289. ,    258. ,    285. ,  37098. ,     31. ],
       [   305. ,    309. ,    296.5,    309. ,  31939. ,     12.5],
       [   313. ,    330. ,    295. ,    304. ,  46724. ,     35. ],
       [   300. ,    309. ,    295.5,    300. ,  27213. ,     13.5],
       [   302. ,    306.5,    290. ,    296. ,  13466. ,     16.5],
       [   299. ,    300. ,    287. ,    300. ,  10316. ,     13. ],
       [   302.5,    309. ,    302. ,    306.5,  15698. ,      7. ]])
```
"""

max_min_diff = playway_values[:, [1]] - playway_values[:, [2]]
playway_values = np.concatenate((playway_values, max_min_diff), axis=1)
playway_values

"""### <a name='8'></a> Exercise 98
Extract rows from the array _playway_values_ where closing price is grater than 300.00.
Извлечете редове от масива _ playway_values _, където цената на затваряне е по-голяма от 300,00.
"""

playway_values[playway_values[:, 3] > 300.0]

"""### <a name='9'></a> Exercise 99
From the array _playway_values_ extract the first 10 rows with the highest volume value sorted in descending order.
От масива _playway_values_ извлечете първите 10 реда с най-високата стойност на обема, сортирани в низходящ ред.
"""

playway_values[playway_values[:, 4].argsort()[::-1]][:10]

"""### <a name='10'></a> Exercise 100
Add to the _playway_values_ array column that will return 1 in case the closing price is higher than the opening price and 0 opposite.
Добавете към колоната на масива _playway_values_, която ще върне 1 в случай, че цената на затваряне е по-висока от цената на отваряне и 0 обратно.

__Expected result:__
```
array([[   305. ,    324.5,    283.5,    310. ,  64081. ,     41. ,      1. ],
       [   325.5,    340.5,    320. ,    340.5,  55496. ,     20.5,      1. ],
       [   324. ,    340.5,    315. ,    330. ,  36152. ,     25.5,      1. ],
       [   344. ,    344. ,    310. ,    315. ,  35992. ,     34. ,      0. ],
       [   306.5,    307. ,    291. ,    305. ,  32539. ,     16. ,      0. ],
       [   274. ,    291. ,    250. ,    258. ,  79402. ,     41. ,      0. ],
       [   278. ,    284.5,    256. ,    264. ,  35700. ,     28.5,      0. ],
       [   270. ,    270. ,    238.5,    245. ,  60445. ,     31.5,      0. ],
       [   218. ,    228. ,    196. ,    197. ,  94031. ,     32. ,      0. ],
       [   210. ,    229. ,    198.8,    211. , 100412. ,     30.2,      1. ],
       [   205. ,    248. ,    197.8,    240.5,  50659. ,     50.2,      1. ],
       [   245. ,    269. ,    232.5,    264. ,  99480. ,     36.5,      1. ],
       [   264. ,    280. ,    251. ,    270. ,  70136. ,     29. ,      1. ],
       [   267. ,    280. ,    267. ,    279.5,  30732. ,     13. ,      1. ],
       [   297.5,    307. ,    280. ,    280.5,  43426. ,     27. ,      0. ],
       [   274. ,    289. ,    258. ,    285. ,  37098. ,     31. ,      1. ],
       [   305. ,    309. ,    296.5,    309. ,  31939. ,     12.5,      1. ],
       [   313. ,    330. ,    295. ,    304. ,  46724. ,     35. ,      0. ],
       [   300. ,    309. ,    295.5,    300. ,  27213. ,     13.5,      0. ],
       [   302. ,    306.5,    290. ,    296. ,  13466. ,     16.5,      0. ],
       [   299. ,    300. ,    287. ,    300. ,  10316. ,     13. ,      1. ],
       [   302.5,    309. ,    302. ,    306.5,  15698. ,      7. ,      1. ]])
```
"""

flag = playway_values[:, [0]] < playway_values[:, [3]]
flag = flag.astype(int)
playway_values = np.concatenate((playway_values, flag), axis=1)
playway_values

