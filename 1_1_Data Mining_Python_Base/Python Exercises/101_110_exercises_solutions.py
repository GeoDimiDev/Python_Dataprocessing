# -*- coding: utf-8 -*-
"""101-110_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L0sZe_F4tsXgM3kh44-v04ljVxYJvTFE

## Pandas

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 101](#1)
* [Exercise 102](#2)
* [Exercise 103](#3)
* [Exercise 104](#4)
* [Exercise 105](#5)
* [Exercise 106](#6)
* [Exercise 107](#7)
* [Exercise 108](#8)
* [Exercise 109](#9)
* [Exercise 110](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np
import pandas as pd

pd.__version__

"""### <a name='1'></a> Exercise 101
From the list below:
От списъка по-долу:
```
stocks = ['PLW', 'CDR', '11B', 'TEN']
```
Create a Series object.
Създайте серия обект.

__Expected result:__

```
0    PLW
1    CDR
2    11B
3    TEN
dtype: object
```
"""

stocks = ['PLW', 'CDR', '11B', 'TEN']
pd.Series(data=stocks)

"""### <a name='2'></a> Exercise 102
From the dictionary below:
От речника по-долу:

```
stocks = {'PLW': 387.00, 'CDR': 339.5, 'TEN': 349.5, '11B': 391.0}
```
Create a Series object and assign it to the _quotations_ variable.
Създайте обект Series и го присвоете на променливата _quotations_.

__Expected result:__

```
PLW    387.0
CDR    339.5
TEN    349.5
11B    391.0
dtype: float64
```


"""

stocks = {'PLW': 387.00, 'CDR': 339.5, 'TEN': 349.5, '11B': 391.0}
quotations = pd.Series(data=stocks)
quotations

"""### <a name='3'></a> Exercise 103

Convert _quotations_ to a list.
Преобразувайте _quotations_ в списък.

__Expected result:__
```
[387.0, 339.5, 349.5, 391.0]
```
"""

quotations.tolist()

"""### <a name='4'></a> Exercise 104
Convert the _quotations_ object to the _DataFrame_ object. Set the column name to _price_.
Преобразувайте обекта _quotations_ в обекта _DataFrame_. Задайте името на колоната на _price_.
"""

pd.DataFrame(quotations, columns=['price'])

"""### <a name='5'></a> Exercise 105
Using the _numpy_ library, build the following _Series_ object:
Използвайки библиотеката _numpy_, изградете следния обект _Series_:

```
101    10.0
102    20.0
103    30.0
104    40.0
105    50.0
106    60.0
107    70.0
108    80.0
109    90.0
dtype: float64
```
"""

pd.Series(data=np.arange(10, 100, 10), index=np.arange(101, 110), dtype='float')

"""### <a name='6'></a> Exercise 106
The following object of type _Series_ is given:
Даден е следният обект от тип _Series_:
```
series = pd.Series(['001', '002', '003', '004'], list('abcd'))
```
Convert type of series to int.
Преобразуване на тип серия в int.


"""

series = pd.Series(['001', '002', '003', '004'], list('abcd'))

# Solution 1
pd.to_numeric(series)

# Solution 2
series.astype(int)

"""Convert object type _series_ to _float_ values."""
"""Преобразуване на тип обект _series_ в _float_ стойности."""

# Solution 2
series.astype(float)

"""### <a name='7'></a> Exercise 107
To the following _quotations_ object:
Към следния обект _quotations_:
```
stocks = {'PLW': 387.00, 'CDR': 339.5, 'TEN': 349.5, '11B': 391.0}
quotations = pd.Series(data=stocks)
```
Add two elements:
Добавете два елемента:
* key: BBT, value: 25.5
* key: F51, value: 19.2

__Expected result:__
```
PLW    387.0
CDR    339.5
TEN    349.5
11B    391.0
BBT     25.5
F51     19.2
dtype: float64
```

"""

stocks = {'PLW': 387.00, 'CDR': 339.5, 'TEN': 349.5, '11B': 391.0}
quotations = pd.Series(data=stocks)

quotations = quotations.append(pd.Series({'BBT': 25.5, 'F51': 19.2}))
quotations

"""### <a name='8'></a> Exercise 108
Convert the _quotations_ object from the previous exercise to _DataFrame_. Reset the index and name the columns '_ticker_' and _'price'_.
Преобразувайте обекта _quotations_ от предишното упражнение в _DataFrame_. Нулирайте индекса и наименувайте колоните '_ticker_' и _'price'_.
"""

quotations = pd.DataFrame(quotations).reset_index()
quotations.columns = ['ticker', 'price']
quotations

"""### <a name='9'></a> Exercise 109

Build the _DataFrame_ object below and assign it to the _companies_ variable:
Създайте обекта _DataFrame_ по-долу и го присвоете на променливата _companies_:

|    | company   |   price | ticker   |
|---:|:----------|--------:|:---------|
|  0 | Amazon    |  2375   | AMZN.US  |
|  1 | Microsoft |   178.6 | MSFT.US  |
|  2 | Facebook  |   179.2 | FB.US    |

"""

data_dict = {
    'company': ['Amazon', 'Microsoft', 'Facebook'],
    'price': [2375.00, 178.6, 179.2],
    'ticker': ['AMZN.US', 'MSFT.US', 'FB.US']
}

companies = pd.DataFrame(data=data_dict)
companies

"""### <a name='10'></a> Exercise 110
Convert the first column of the _companies_ object to index.
Преобразувайте първата колона на обекта _companies_ в индекс.

"""

companies = companies.set_index('company')
companies

"""Extract row for company _Facebook_ from object _companies_."""
"""Извличане на ред за компания _Facebook_ от обект _companies_."""

# Solution 1
companies.loc['Facebook']

# Solution 2
companies.iloc[2]

"""Extract price for _Microsoft_"""
"""Цена за извличане на _Microsoft_"""

# Solution 1
companies.loc['Microsoft', 'price']

# Solution 2
companies.iloc[1, 0]

