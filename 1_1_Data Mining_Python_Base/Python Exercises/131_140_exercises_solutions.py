# -*- coding: utf-8 -*-
"""131-140_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fjaEhrvi3GipUdKGvXy1fHiUXCtr4y85

## Pandas

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 131](#1)
* [Exercise 132](#2)
* [Exercise 133](#3)
* [Exercise 134](#4)
* [Exercise 135](#5)
* [Exercise 136](#6)
* [Exercise 137](#7)
* [Exercise 138](#8)
* [Exercise 139](#9)
* [Exercise 140](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np
import pandas as pd
import seaborn as sns

np.__version__
sns.set()

"""### <a name='1'></a> Exercise 131

Load the csv file into a DataFrame object named _df_raw_ with the default parameters of the _pd.read_csv()_ function and display the first 5 rows.
Заредете csv файла в обект DataFrame с име _df_raw_ с параметрите по подразбиране на функцията _pd.read_csv()_ и покажете първите 5 реда.
File url:
* https://ml-repository-krakers.s3-eu-west-1.amazonaws.com/kaggle+/churn_modelling/Telco-Customer-Churn.csv
"""

url = 'https://ml-repository-krakers.s3-eu-west-1.amazonaws.com/kaggle+/churn_modelling/Telco-Customer-Churn.csv'
df_raw = pd.read_csv(url)
df_raw.head()

"""Copy the _df_raw_ object to the _df_ variable."""
"""Копирайте обекта _df_raw_ в променливата _df_."""

df = df_raw.copy()

"""Display basic information about the object _df_."""
"""Показва основна информация за обекта _df_."""

df.info()

"""Determine the number of missing elements (_np.nan_) in the _df_ object for each variable."""
"""Определете броя на липсващите елементи (_np.nan_) в _df_ обекта за всяка променлива."""

df.isnull().sum()

"""### <a name='2'></a> Exercise 132
Note the _TotalCharges_ column. The type of this column is _object_. Try to guess why this happened.
Обърнете внимание на колоната _TotalCharges_. Типът на тази колона е _object_. Опитайте се да отгатнете защо се е случило това.

__Tip:__
Look at the variable distribution.
"""

df['TotalCharges'].value_counts()

"""Note that we have 11 null values. To see it better, see below."""
"""Имайте предвид, че имаме 11 нулеви стойности. За да го видите по-добре, вижте по-долу."""

df['TotalCharges'].value_counts()[:3].index

"""This is a space character that has crept into our data. This made the pandas read the entire column as text. As an analyst, we have to deal with such problems. Try to replace the missing values of the _TotalCharges_ column with its median."""
"""Това е знак за интервал, който се е промъкнал в нашите данни. Това накара пандите да прочетат цялата колона като текст. Като анализатор трябва да се справяме с подобни проблеми. Опитайте се да замените липсващите стойности на колоната _TotalCharges_ с нейните Медиана."""

# Calculation of the median for the TotalCharges column
TotalChargesMedian = df['TotalCharges'][df['TotalCharges'] != ' '].median()

# Fill the missing values with median
df.loc[df['TotalCharges'] == ' ', 'TotalCharges'] = TotalChargesMedian

# Convert TotalCharges column to float type
df['TotalCharges'] = df['TotalCharges'].astype('float')

"""Check if the type has been changed correctly."""
"""Проверете дали типът е променен правилно."""

df.info()

"""### <a name='3'></a> Exercise 133
Convert columns from the list below _categorical_ to type _category_.
Преобразувайте колони от списъка под _categorical_ в тип _category_.
"""

categorical = ['gender', 'SeniorCitizen', 'Partner', 'Dependents', 'PhoneService', 'MultipleLines',
               'InternetService', 'OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport',
               'StreamingTV', 'Contract', 'StreamingMovies', 'PaperlessBilling', 'PaymentMethod', 'Churn']

for col in categorical:
    df[col] = pd.Categorical(df[col])

"""Convert columns from the list below _numerical_ to type _float_."""
"""Преобразувайте колони от списъка по-долу _numerical_ в тип _float_."""

numerical = ['tenure', 'MonthlyCharges']

for col in numerical:
    df[col] = df[col].astype(float)

"""Set the _customerID_ column as the index of the _df_ object and display info about the _df_ object."""
"""Задайте колоната _customerID_ като индекс на _df_ обекта и покажете информация за _df_ обекта."""

df = df.set_index('customerID')
df.info()

"""### <a name='4'></a> Exercise 134
Use the _describe()_ method to display basic statistics for the _df_ object.
Използвайте метода _describe()_ за показване на основни статистики за обекта _df_.
"""

df.describe()

"""Note that these are only numeric variables. Display the basic statistics of categorical variables by passing the appropriate parameter _include_ of the _describe()_ method."""
"""Имайте предвид, че това са само числови променливи. Покажете основните статистики на категоричните променливи, като подадете съответния параметър _include_ на метода _describe()_."""

df.describe(include=['category'])

"""Note that these are slightly different statistics than for numeric variables.
"""Имайте предвид, че това са малко по-различни статистики от тези за числови променливи.

### <a name='5'></a> Exercise 135
Find the distribution of values for the _Churn_ variable.
Намерете разпределението на стойностите за променливата _Churn_.
"""

df['Churn'].value_counts()

"""Build a pie chart of the distribution of the _Churn_ variable."""
"""Изградете кръгова диаграма на разпределението на променливата _Churn_."""

df['Churn'].value_counts().plot(kind='pie')

"""### <a name='6'></a> Exercise 136
Build the _pairplot()_ chart from the _seaborn_ library. Pass variables:
* tenure
* MonthlyCharges
* TotalCharges


and the parameter: _hue = 'Churn'_.

Изградете диаграмата _pairplot()_ от библиотеката _seaborn_. Предавайте променливи:
* мандат
* Месечни такси
* Общо такси

и параметъра: _hue = 'Churn'_.

__Tip:__
https://seaborn.pydata.org/generated/seaborn.pairplot.html
"""

sns.pairplot(df, vars=['tenure', 'MonthlyCharges', 'TotalCharges'], hue='Churn')

"""### <a name='7'></a> Exercise 137
Map the _Churn_ column accordingly:
* 'Yes' -> 1
* 'No' -> 0

Display the first 5 rows of _df_.
"""

df['Churn'] = df['Churn'].map({'Yes': 1, 'No': 0})
df.head()

"""### <a name='8'></a> Exercise 138
Calculate the correlation matrix for the _df_ object.
Изчислете корелационната матрица за _df_ обекта.
"""

df.corr()

"""### <a name='9'></a> Exercise 139
Find the distribution of _PaymentMethod_.
Намерете разпространението на _PaymentMethod_.
"""

df['PaymentMethod'].value_counts()

"""Group data by the _PaymentMethod_ variable and calculate the average value for the _TotalCharges_ variable."""
"""Групирайте данните по променливата _PaymentMethod_ и изчислете средната стойност за променливата _TotalCharges_."""

df.groupby('PaymentMethod')['TotalCharges'].mean()

"""### <a name='10'></a> Exercise 140
Take a sample of 10 rows from the _df_ object and save to _sample_10.csv_.
Вземете проба от 10 реда от _df_ обекта и я запазете в _sample_10.csv_.
"""

df.sample(10).to_csv('sample_10.csv')

"""Run the cell below to check."""
"""Изпълнете клетката по-долу, за да проверите."""

! cat sample_10.csv