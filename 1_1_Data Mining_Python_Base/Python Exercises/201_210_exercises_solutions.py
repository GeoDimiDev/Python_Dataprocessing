# -*- coding: utf-8 -*-
"""201-210_exercises_solutions.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13tH7NHMLbysQdGhdTHzH3qNbMDq93Dc7

## Data Science Bootcamp

### Table of contents:
* [Import biblioteki](#0)
* [Exercise 201](#1)
* [Exercise 202](#2)
* [Exercise 203](#3)
* [Exercise 204](#4)
* [Exercise 205](#5)
* [Exercise 206](#6)
* [Exercise 207](#7)
* [Exercise 208](#8)
* [Exercise 209](#9)
* [Exercise 210](#10)

### <a name='0'></a> Import of libraries
"""

import numpy as np
import pandas as pd

np.__version__

"""### <a name='1'></a> Exercise 201
Create the _DataFrame_ object from the _data_ dictionary below and assign it to the _df_ variable.
Създайте обекта _DataFrame_ от речника _data_ по-долу и го присвоете на променливата _df_.
"""

data = {
    'size': ['XL', 'L', 'M', np.nan, 'M', 'M'],
    'color': ['red', 'green', 'blue', 'green', 'red', 'green'],
    'gender': ['female', 'male', np.nan, 'female', 'female', 'male'],
    'price': [199.0, 89.0, np.nan, 129.0, 79.0, 89.0],
    'weight': [500, 450, 300, np.nan, 410, np.nan],
    'bought': ['yes', 'no', 'yes', 'no', 'yes', 'no']
}

df = pd.DataFrame(data=data)
df

"""Display basic information about the object _df_."""
"""Показва основна информация за обекта _df_."""

df.info()

"""### <a name='2'></a> Exercise 202
Check the number of missing values for individual variables.
Проверете броя на липсващите стойности за отделните променливи.
"""

df.isnull().sum()

"""Check the number of missing values for individual variables. Display percentage of missing values."""
"""Проверете броя на липсващите стойности за отделните променливи. Показване на процента на липсващите стойности."""

np.round(df.isnull().sum() / len(df), 2)

"""### <a name='3'></a> Exercise 203
Using the _scikit-learn_ machine learning library and the _SimpleImputer_ class, fill in the missing values for the _weight_ variable with the mean value. Assign changes to the _df_ object permanently.
Използвайки библиотеката за машинно обучение _scikit-learn_ и класа _SimpleImputer_, попълнете липсващите стойности за променливата _weight_ със средната стойност. Присвояване на промени на обекта _df_ за постоянно.
"""

from sklearn.impute import SimpleImputer

imputer = SimpleImputer(missing_values=np.nan, strategy='mean')
df[['weight']] = imputer.fit_transform(df[['weight']])
df

"""Display the average value inserted in place of missing _weight_ columns."""
"""Показване на средната стойност, вмъкната на мястото на липсващите _тегло_ колони."""

imputer.statistics_

"""### <a name='4'></a> Exercise 204
Using the machine learning library _scikit-learn_ and the _SimpleImputer_ class, fill in the missing values for the _price_ variable with a fixed value of 99.0. Assign changes to the _df_ object permanently.
Като използвате библиотеката за машинно обучение _scikit-learn_ и класа _SimpleImputer_, попълнете липсващите стойности за променливата _price_ с фиксирана стойност 99,0. Присвояване на промените на обекта _df_ за постоянно.
"""

imputer = SimpleImputer(missing_values=np.nan, strategy='constant', fill_value=99.0)
df[['price']] = imputer.fit_transform(df[['price']])
df

"""### <a name='5'></a> Exercise 205
Using the machine learning library _scikit-learn_ and the _SimpleImputer_ class, fill in the missing values for the _size_ variable that appears most frequently. Assign changes to the _df_ object permanently.
Като използвате библиотеката за машинно обучение _scikit-learn_ и класа _SimpleImputer_, попълнете липсващите стойности за променливата _size_, която се появява най-често. Присвояване на промените на обекта _df_ за постоянно.
"""

imputer = SimpleImputer(missing_values=np.nan, strategy='most_frequent')
df[['size']] = imputer.fit_transform(df[['size']])
df

"""### <a name='6'></a> Exercise 206
Before proceeding to the next exercises, reload the  _data_ dictionary into the object _df_.
Преди да продължите към следващите упражнения, презаредете речника _data_ в обекта _df_.
"""

df = pd.DataFrame(data)
df

"""Extract all rows of the _df_ object for which the _weight_ variable is set to _np.nan_."""
"""Извлечете всички редове от _df_ обекта, за които променливата _weight_ е зададена на _np.nan_."""

df[df['weight'].isnull()]

"""Extract all rows of the _df_ object for which the _weight_ variable doesn't take the value _np.nan_."""
"""Извлечете всички редове от _df_ обекта, за които променливата _weight_ не приема стойността _np.nan_."""

df[~df['weight'].isnull()]

"""### <a name='7'></a> Exercise 207
Fill all missing values in the _df_ object with 'none'. Don't assign changes to the _df_ variable permanently.
Попълнете всички липсващи стойности в обекта _df_ с „няма“. Не присвоявайте промени на променливата _df_ за постоянно.
"""

df.fillna('none')

"""### <a name='8'></a> Exercise 208
Remove rows with missing data from the _df_ object. Don't assign changes to the _df_ variable permanently.
Премахнете редовете с липсващи данни от обекта _df_. Не присвоявайте промени на променливата _df_ за постоянно.
"""

df.dropna()

"""### <a name='9'></a> Exercise 209
Remove rows with missing data from the _df_ object for which there are at least 5 defined values (otherwise contain two missing _np.nan_). Don't assign changes to the _df_ variable permanently.
Премахнете редовете с липсващи данни от обекта _df_, за който има поне 5 дефинирани стойности (в противен случай съдържат два липсващи _np.nan_). Не присвоявайте промени на променливата _df_ за постоянно.
"""

df.dropna(thresh=5)

"""### <a name='10'></a> Exercise 210
Remove rows with missing values from the _df_ object for which there are at least 5 defined values (otherwise they contain two missing values _np.nan_) and fill in the missing values with a fixed value of 400.0. Do not assign changes to the _df_ variable permanently.
Премахнете редове с липсващи стойности от обекта _df_, за който има поне 5 дефинирани стойности (в противен случай те съдържат две липсващи стойности _np.nan_) и попълнете липсващите стойности с фиксирана стойност от 400.0. Не присвоявайте промени на променливата _df_ за постоянно.
"""

df.dropna(thresh=5).fillna(400.0)